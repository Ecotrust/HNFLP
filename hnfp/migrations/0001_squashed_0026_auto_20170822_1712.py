# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-23 17:13
from __future__ import unicode_literals

import ckeditor.fields
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('hnfp', '0001_initial'), ('hnfp', '0002_auto_20170710_1438'), ('hnfp', '0003_post'), ('hnfp', '0004_aoi_jobopportunity'), ('hnfp', '0005_auto_20170728_1518'), ('hnfp', '0006_auto_20170728_1536'), ('hnfp', '0007_auto_20170808_1556'), ('hnfp', '0008_auto_20170808_1558'), ('hnfp', '0009_auto_20170809_1521'), ('hnfp', '0010_auto_20170809_1626'), ('hnfp', '0011_auto_20170809_1635'), ('hnfp', '0012_auto_20170810_1103'), ('hnfp', '0015_auto_20170816_1303'), ('hnfp', '0016_auto_20170816_1332'), ('hnfp', '0017_auto_20170816_1509'), ('hnfp', '0018_auto_20170816_1528'), ('hnfp', '0019_auto_20170819_1718'), ('hnfp', '0020_auto_20170820_1602'), ('hnfp', '0021_auto_20170822_1249'), ('hnfp', '0022_auto_20170822_1313'), ('hnfp', '0025_auto_20170822_1446'), ('hnfp', '0026_auto_20170822_1712')]

    initial = True

    dependencies = [
        ('drawing', '0003_auto_20170706_1438'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('required', models.BooleanField()),
                ('question_type', models.CharField(choices=[('text', 'text'), ('radio', 'radio'), ('select', 'select'), ('select-multiple', 'Select Multiple'), ('integer', 'integer')], default='text', max_length=200)),
                ('choices', models.TextField(blank=True, help_text='if the question type is "radio," "select," or "select multiple" provide a comma-separated list of options for this question .', null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hnfp.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('interviewer', models.CharField(max_length=400, verbose_name='Name of Interviewer')),
                ('interviewee', models.CharField(max_length=400, verbose_name='Name of Interviewee')),
                ('conditions', models.TextField(blank=True, null=True, verbose_name='Conditions during interview')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Any additional Comments')),
                ('interview_uuid', models.CharField(max_length=36, verbose_name='Interview unique identifier')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AnswerInteger',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hnfp.AnswerBase')),
                ('body', models.IntegerField(blank=True, null=True)),
            ],
            bases=('hnfp.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerRadio',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hnfp.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('hnfp.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerSelect',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hnfp.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('hnfp.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerSelectMultiple',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hnfp.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('hnfp.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerText',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hnfp.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('hnfp.answerbase',),
        ),
        migrations.AddField(
            model_name='response',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hnfp.Survey'),
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hnfp.Survey'),
        ),
        migrations.AddField(
            model_name='category',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hnfp.Survey'),
        ),
        migrations.AddField(
            model_name='answerbase',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hnfp.Question'),
        ),
        migrations.AddField(
            model_name='answerbase',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hnfp.Response'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('body', models.TextField()),
                ('allow_comments', models.BooleanField(default=True, verbose_name='allow comments')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='JobOpportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('jop_post_doc', models.FileField(blank=True, upload_to='job-post/')),
                ('html_content', models.TextField(blank=True, help_text='html if use html == True', null=True)),
                ('is_html', models.BooleanField(default=False, help_text='Use HTML editor')),
            ],
            options={
                'verbose_name_plural': 'Job Opportunities',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customcategory', models.CharField(blank=True, max_length=400, null=True)),
                ('observation_date', models.CharField(blank=True, max_length=100, null=True)),
                ('observation_type', models.CharField(blank=True, max_length=400, null=True)),
                ('observation_tally', models.CharField(blank=True, default=1, max_length=100, null=True)),
                ('observation_created', models.DateTimeField(auto_now_add=True)),
                ('observation_updated', models.DateTimeField(auto_now=True)),
                ('number_of_observers', models.CharField(blank=True, default=1, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, default=None, max_length=20000, null=True)),
                ('category', models.CharField(choices=[('bear', 'Bear'), ('deer', 'Dear'), ('medicinal_herbs', 'Medicinal Herbs'), ('shrimp', 'Shrimp'), ('berries', 'Berries'), ('firewood', 'Firewood'), ('mushrooms', 'Mushrooms'), ('crab', 'Crab'), ('fish', 'Fish'), ('shellfish', 'Shellfish'), ('custom', 'Custom')], default='custom', max_length=400)),
                ('observation_time', models.CharField(blank=True, max_length=20, null=True)),
                ('observation_location', django.contrib.gis.db.models.fields.PointField(blank=True, default=None, null=True, srid=3857)),
            ],
            options={
                'verbose_name_plural': 'Observations',
            },
        ),
        migrations.CreateModel(
            name='AOI',
            fields=[
                ('aoi_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='drawing.AOI')),
            ],
            options={
                'abstract': False,
            },
            bases=('drawing.aoi',),
        ),
    ]
